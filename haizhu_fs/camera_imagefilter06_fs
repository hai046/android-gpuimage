precision lowp float;

varying highp vec2 textureCoordinate;

uniform sampler2D inputImageTexture;
uniform sampler2D inputImageTexture2;
uniform sampler2D inputImageTexture3;

uniform sampler2D uvTexture;
precision mediump float;

void main()
{


	vec4 y = vec4((texture2D(inputImageTexture, textureCoordinate).r - 16./255.) * 1.164);  
  	vec4 u = vec4(texture2D(uvTexture, textureCoordinate).a - 128./255.);  
  	vec4 v = vec4(texture2D(uvTexture, textureCoordinate).r - 128./255.);  
  	y += v * vec4(1.596, -0.813, 0, 0);
  	y += u * vec4(0, -0.392, 2.017, 0);  
  	y.a = 1.0;
    
    vec3 texel =y.rgb ;//texture2D(inputImageTexture, textureCoordinate).rgb;
    
    vec2 tc = (2.0 * textureCoordinate) - 1.0;
    float d = dot(tc, tc);
    vec2 pa1 = vec2(d * 0.7, texel.r);
    texel.r = texture2D(inputImageTexture3, pa1).r;
    pa1.y = texel.g;
    texel.g = texture2D(inputImageTexture3, pa1).g;
    pa1.y = texel.b;
    texel.b    = texture2D(inputImageTexture3, pa1).b;
    
    vec2 red = vec2(texel.r, 0.16666);
    vec2 green = vec2(texel.g, 0.5);
    vec2 blue = vec2(texel.b, .83333);
    texel.r = texture2D(inputImageTexture2, red).r;
    texel.g = texture2D(inputImageTexture2, green).g;
    texel.b = texture2D(inputImageTexture2, blue).b;
    
    gl_FragColor = vec4(texel, 1.0);
    
}